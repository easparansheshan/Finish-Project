{"ast":null,"code":"import { authConstants, cartConstants } from \"./constants\";\nimport axios from \"../helpers/axios\"; // new update signup action\n\nexport const signup = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: authConstants.SIGNUP_REQUEST\n      });\n      const res = await axios.post(`/signup`, user);\n\n      if (res.status === 201) {\n        dispatch({\n          type: authConstants.SIGNUP_SUCCESS\n        });\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.SIGNUP_FAILURE\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/signin`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Failed to login\"\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    }); // localStorage.removeItem('user');\n    // localStorage.removeItem('token');\n\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n    dispatch({\n      type: cartConstants.RESET_CART\n    }); //const res = await axios.post(`/admin/signout`);\n    // if(res.status === 200){\n    // }else{\n    //     dispatch({\n    //         type: authConstants.LOGOUT_FAILURE,\n    //         payload: { error: res.data.error }\n    //     });\n    // }\n  };\n};","map":{"version":3,"sources":["E:/New folder/project final/frontend/src/actions/auth.action.js"],"names":["authConstants","cartConstants","axios","signup","user","dispatch","type","SIGNUP_REQUEST","res","post","status","SIGNUP_SUCCESS","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","SIGNUP_FAILURE","error","console","log","login","LOGIN_REQUEST","LOGIN_FAILURE","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","RESET_CART"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,aAA7C;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,aAAa,CAACO;AAAtB,OAAD,CAAR;AACA,YAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAY,SAAZ,EAAsBL,IAAtB,CAAlB;;AACA,UAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEN,aAAa,CAACW;AAAtB,SAAD,CAAR;AACA,cAAM;AAAEC,UAAAA,KAAF;AAASR,UAAAA;AAAT,YAAkBI,GAAG,CAACK,IAA5B;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAA7B;AACAC,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEN,aAAa,CAACkB,aADb;AAEPC,UAAAA,OAAO,EAAE;AACPP,YAAAA,KADO;AAEPR,YAAAA;AAFO;AAFF,SAAD,CAAR;AAOD,OAZD,MAYO;AACLC,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEN,aAAa,CAACoB;AAAtB,SAAD,CAAR;AACD;AACF,KAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMG,KAAK,GAAIpB,IAAD,IAAU;AAC7B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,aAAa,CAACyB;AAAtB,KAAD,CAAR;AACA,UAAMjB,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAY,SAAZ,EAAsB,EACtC,GAAGL;AADmC,KAAtB,CAAlB;;AAIA,QAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEE,QAAAA,KAAF;AAASR,QAAAA;AAAT,UAAkBI,GAAG,CAACK,IAA5B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAA7B;AACAC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,aAAa,CAACkB,aADb;AAEPC,QAAAA,OAAO,EAAE;AACPP,UAAAA,KADO;AAEPR,UAAAA;AAFO;AAFF,OAAD,CAAR;AAOD,KAXD,MAWO;AACL,UAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEN,aAAa,CAAC0B,aADb;AAEPP,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEb,GAAG,CAACK,IAAJ,CAASQ;AAAlB;AAFF,SAAD,CAAR;AAID;AACF;AACF,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAMM,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOtB,QAAP,IAAoB;AACzB,UAAMO,KAAK,GAAGE,YAAY,CAACc,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIhB,KAAJ,EAAW;AACT,YAAMR,IAAI,GAAGY,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAvB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,aAAa,CAACkB,aADb;AAEPC,QAAAA,OAAO,EAAE;AACPP,UAAAA,KADO;AAEPR,UAAAA;AAFO;AAFF,OAAD,CAAR;AAOD,KATD,MASO;AACLC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,aAAa,CAAC0B,aADb;AAEPP,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAFF,OAAD,CAAR;AAID;AACF,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMS,OAAO,GAAG,MAAM;AAC3B,SAAO,MAAOzB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,aAAa,CAAC+B;AAAtB,KAAD,CAAR,CADyB,CAEzB;AACA;;AACAjB,IAAAA,YAAY,CAACkB,KAAb;AACA3B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,aAAa,CAACiC;AAAtB,KAAD,CAAR;AACA5B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,aAAa,CAACiC;AAAtB,KAAD,CAAR,CANyB,CAOzB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,GAhBD;AAiBD,CAlBM","sourcesContent":["import { authConstants, cartConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\n// new update signup action\nexport const signup = (user) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: authConstants.SIGNUP_REQUEST });\n      const res = await axios.post(`/signup`, user);\n      if (res.status === 201) {\n        dispatch({ type: authConstants.SIGNUP_SUCCESS });\n        const { token, user } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user,\n          },\n        });\n      } else {\n        dispatch({ type: authConstants.SIGNUP_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const login = (user) => {\n  return async (dispatch) => {\n    dispatch({ type: authConstants.LOGIN_REQUEST });\n    const res = await axios.post(`/signin`, {\n      ...user,\n    });\n\n    if (res.status === 200) {\n      const { token, user } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user,\n        },\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: { error: res.data.error },\n        });\n      }\n    }\n  };\n};\n\nexport const isUserLoggedIn = () => {\n  return async (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user,\n        },\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: { error: \"Failed to login\" },\n      });\n    }\n  };\n};\n\nexport const signout = () => {\n  return async (dispatch) => {\n    dispatch({ type: authConstants.LOGOUT_REQUEST });\n    // localStorage.removeItem('user');\n    // localStorage.removeItem('token');\n    localStorage.clear();\n    dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    dispatch({ type: cartConstants.RESET_CART });\n    //const res = await axios.post(`/admin/signout`);\n    // if(res.status === 200){\n\n    // }else{\n    //     dispatch({\n    //         type: authConstants.LOGOUT_FAILURE,\n    //         payload: { error: res.data.error }\n    //     });\n    // }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}